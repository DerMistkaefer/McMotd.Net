@using McMotdParser.Data;
@using McMotdParser;
@using McMotdParser.Enum
@using System.Text
<div class="mcmotd-container">
    @foreach(MotdContent motd in motds)
    {
        @if (motd.LineBreak)
        {
            <br/>
        }
        <span class="@getStyle(motd.TextFormatting)" style="color: @motd.Color">
            @motd.Text 

        </span>
    }
</div>



@code{
    [Parameter]
    public string RawMotdString { get; set; }
    
    private List<MotdContent> motds { get; set; }

    protected override void OnInitialized()
    {
        motds = new MotdParser().ToRazor(RawMotdString);
        base.OnInitialized();
    }

    public string getStyle(HashSet<TextFormatEnum> TextFormat)
    {
        StringBuilder sb = new StringBuilder();
        foreach (var format in TextFormat)
        {
            switch (format)
            {
                case TextFormatEnum.Bold:
                    sb.Append("mcmotd-text-bold");
                    break;
                case TextFormatEnum.Italic:
                    sb.Append("mcmotd-text-italic");
                    break;
                case TextFormatEnum.Underline:
                    sb.Append("mcmotd-text-underline");
                    break;
                default:
                    sb.Append(".mcmotd-text-normal");
                    break;
            }
            sb.Append(" ");
        }
        return sb.ToString();
    }

} 